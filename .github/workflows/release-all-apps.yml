name: Release All Apps

on:
  push:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.14.0

      - name: Restore root node_modules cache
        uses: martijnhols/actions-cache@v3
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the latest tag
        id: latest_tag
        run: echo "value=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Generate releases and build docker images
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "ci@akash.network"
          git config --global user.name "CI"
          npm run release -w apps/api -- --preRelease=beta --verbose --ci -r ${{ vars.API_REGISTRY }}
          npm run release -w apps/deploy-web -- --preRelease=beta -f --verbose --ci -r ${{ vars.WEB_REGISTRY }}

      - name: Trigger Akash deployment
        run: |
          latest_tag=${{ steps.latest_tag.outputs.value }}
          if [ -z "$latest_tag" ]; then
            echo "No latest tag found. Iterating over all tags."
            tags=$(git tag --sort=-creatordate --merged)
          else
            echo "Latest tag found: $latest_tag. Iterating over tags since latest tag."
            tags=$(git tag --sort=-creatordate --merged | grep -v "$latest_tag")
          fi

          DEPLOYABLE_TAGS=("console-api")
          tags_to_deploy=""

          for tag in $tags; do
            for deployable_tag in "${DEPLOYABLE_TAGS[@]}"; do
              if [[ $tag == $deployable_tag* ]]; then
                echo "Adding tag to deploy: $tag"
                tags_to_deploy="$tags_to_deploy $tag"
              fi
            done
          done

          if [ -n "$tags_to_deploy" ]; then
            for tag in $tags_to_deploy; do
              echo "Dispatching deploy workflow for: $tag"
              curl -X POST \
                -H "Authorization: token ${{ secrets.AKASH_GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy-to-akash.yml/dispatches \
                -d "{\"ref\": \"main\", \"inputs\": { \"tag\": \"$tag\" }}"
            done
          else
            echo "No tags to deploy."
          fi
        
